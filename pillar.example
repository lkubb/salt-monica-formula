# -*- coding: utf-8 -*-
# vim: ft=yaml
# yamllint disable rule:comments-indentation
---
monica:
  install:
      # Install rootless containers running as dedicated user.
    rootless: true
      # Add autoupdate label to containers, allowing to run
      # podman autoupdate (manually)
    autoupdate: true
      # Manage podman-auto-update.timer (auto-autoupdate)
      # (null=do not manage, false=disable, true=enable)
    autoupdate_service: false
      # When applying `clean` states, also remove application data.
      # Setting this to true might incur accidental data loss!
    remove_all_data_for_sure: false
  config:
      # Allow to access general statistics about your instance through
      # a public API call
    allow_statistics_through_public_api_access: false
    app:
      debug: false
      disable_signup: true
        # New registration notification sent to this email
      email_new_users_notification: null
        # Two choices: local|production. Use local if you want to
        # install Monica as a development version. Use production otherwise.
      env: production
        # Force using APP_URL as base url of your application.
        # You should not need this, unless you are using subdirectory config.
      force_url: false
        # Must be 32 characters long exactly. Will be autogenerated if empty.
        # Use `php artisan key:generate` or `echo -n 'base64:'; openssl rand -base64 32`
        # to generate a random key.
      key: null
        # Enable user email verification.
      signup_double_optin: false
        # Enable automatic cloudflare trusted proxy discover
      trusted_cloudflare: false
        # Set trusted proxy IP addresses.
        # To trust all proxies that connect directly to your server, use a "*".
      trusted_proxies: []
        # The URL of your application.
      url: http://localhost
    aws:
      bucket: null
      key: null
      region: us-east-1
      secret: null
      server: null
      # database, file, memcached, redis, dynamodb
    cache_driver: database
      # Send a daily ping to https://version.monicahq.com to check if a new version
      # is available. When a new version is detected, you will have a message in the
      # UI, as well as the release notes for the new changes. Can be true or false.
    check_version: true
    dav_enabled: true
    db:
      connection: mysql
      database: monica
      host: db
        # Will be autogenerated if left empty.
      password: null
      port: 3306
      prefix: ''
      test:
        database: monica_test
        host: 127.0.0.1
        password: secret
        username: homestead
        # You can use mysql unix socket if available, it overrides DB_HOST and DB_PORT values.
      unix_socket: null
      use_utf8mb4: true
      username: monica
      # Default filesystem to store uploaded files.
      # Possible values: public|s3
    default_filesystem: public
      # Maximum allowed storage size per account, in megabytes.
    default_max_storage_size: 512
      # Maximum allowed size for uploaded files, in kilobytes.
    default_max_upload_size: 10240
      # This is used to translate addresses to GPS coordinates.
    enable_geolocation: false
      # Enable weather on contact profile page
      # Weather can only be fetched if we know longitude/latitude - this is why
      # you also need to activate the geolocation service above to make it work
    enable_weather: false
      # Prevent information leakage by referring to IDs with hashIds instead of
      # the actual IDs used in the database.
    hash:
      length: 18
      salt: null
      # API key for geolocation services
      # We use LocationIQ (https://locationiq.com/) to translate addresses to
      # latitude/longitude coordinates. We could use Google instead but we don't
      # want to give anything to Google, ever.
      # LocationIQ offers 5000 free requests per day.
    location_iq_api_key: null
      # Frequency of creation of new log files. Logs are written when an error occurs.
      # Refer to config/logging.php for the possible values.
    log_channel: daily
    mail:
      encryption: null
      from_address: null
      from_name: Monica instance
      host: mailtrap.io
      mailer: smtp
      password: null
      port: 2525
      username: null
      # Allow Two Factor Authentication feature on your instance
    mfa_enabled: true
      # CLIENT ID and SECRET used for OAuth authentication
    passport_password_grant:
      client_id: null
      client_secret: null
      # Indicates that each user in the instance must comply to international policies
      # like CASL or GDPR
    policy_compliant: true
      # If Queue is not set to 'sync', you'll have to set a queue worker
      # See https://laravel.com/docs/5.7/queues#running-the-queue-worker
      # sync, database, beanstalkd, sqs, redis
    queue_connection: sync
      # Configure rate limits for RouteService per minute
    rate_limit:
      per_minute_api: 60
      per_minute_oauth: 5
    redis_host: null
      # Set to true if you use S3 and need path style URL support for bucket access
      # The default is to use virtual-hosted style URLs which may not work everywhere
    s3_path_style: null
      # Error tracking. Specific to hosted version on .com.
      # You probably don't need those.
    sentry:
      laravel_dsn: null
      support: false
    session:
        # file, cookie, database, apc, memcached, redis, array
      driver: file
      lifetime: 120
      # Access to weather data from darksky api
      # https://www.weatherapi.com/signup.aspx
      # You need to enable the weather above if you provide an API key here.
    weatherapi_key: null

    # The host port the service will be mapped to
  host_port: 3014

  lookup:
    rootgroup: root
    compose:
      create_pod: null
      pod_args: null
      project_name: monica
      remove_orphans: true
      build: false
      build_args: null
      pull: false
      service:
        container_prefix: null
        ephemeral: true
        pod_prefix: null
        restart_policy: on-failure
        restart_sec: 2
        separator: null
        stop_timeout: null
    paths:
      base: /opt/containers/monica
      compose: docker-compose.yml
      config_monica: monica.env
      config_db: db.env
      data: data
      db: db
    user:
      groups: []
      home: null
      name: monica
      shell: /usr/sbin/nologin
      uid: null
      gid: null
    containers:
      db:
        image: docker.io/library/mysql:5.7
      monica:
        image: docker.io/library/monica:apache

  tofs:
      # The files_switch key serves as a selector for alternative
      # directories under the formula files directory. See TOFS pattern
      # doc for more info.
      # Note: Any value not evaluated by `config.get` will be used literally.
      # This can be used to set custom paths, as many levels deep as required.
    files_switch:
      - any/path/can/be/used/here
      - id
      - roles
      - osfinger
      - os
      - os_family

      # All aspects of path/file resolution are customisable using the options below.
      # This is unnecessary in most cases; there are sensible defaults.
      # Default path: salt://< path_prefix >/< dirs.files >/< dirs.default >
      # I.e.: salt://monica/files/default
      # path_prefix: template_alt
      # dirs:
      #   files: files_alt
      #   default: default_alt
      # The entries under `source_files` are prepended to the default source files
      # given for the state
    source_files:
      Monica CRM compose file is managed:
        - docker-compose_alt.yml
        - docker-compose_alt.yml.j2
      monica environment file is managed:
        - monica_alt.env
        - monica_alt.env.j2
      db environment file is managed:
        - db_alt.env
        - db_alt.env.j2
